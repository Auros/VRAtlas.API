name: Upload To Container Registry

on:
  workflow_dispatch:
  
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build (x64)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      working-directory: ./VRAtlas
      run: dotnet restore
    - name: Build
      working-directory: ./VRAtlas
      run: dotnet build --no-restore
  docker:
    name: Upload (x64)
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Registry Login
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Format Image Name
      run: |
        echo "TARGET_IMAGE_NAME=${IMAGE_NAME,,}" >>${GITHUB_ENV}
    - name: Build Image
      working-directory: ./VRAtlas
      run: docker build -t ${{ env.REGISTRY }}/${{ env.TARGET_IMAGE_NAME }}:main ../
    - name: Publish Image
      run: docker push ${{ env.REGISTRY }}/${{ env.TARGET_IMAGE_NAME }} --all-tags
  docker-arm:
    name: Upload (ARM)
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Registry Login
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Format Image Name
      run: |
        echo "TARGET_IMAGE_NAME=${IMAGE_NAME,,}" >>${GITHUB_ENV}
    - name: Build Image
      working-directory: ./VRAtlas
      run: docker build -t ${{ env.REGISTRY }}/${{ env.TARGET_IMAGE_NAME }}:arm64 -f ../Dockerfile.arm64 ../
    - name: Publish Image
      run: docker push ${{ env.REGISTRY }}/${{ env.TARGET_IMAGE_NAME }} --all-tags