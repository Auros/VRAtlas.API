// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VRAtlas;

#nullable disable

namespace VRAtlas.Migrations
{
    [DbContext(typeof(AtlasContext))]
    partial class AtlasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VRAtlas.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Instant>("JoinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("LastLoginAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("MetadataId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Picture")
                        .HasColumnType("uuid");

                    b.Property<string>("SocialId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("MetadataId");

                    b.HasIndex("SocialId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VRAtlas.Models.UserMetadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CurrentSocialPlatformProfilePicture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CurrentSocialPlatformUsername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SynchronizeProfilePictureWithSocialPlatform")
                        .HasColumnType("boolean");

                    b.Property<bool>("SynchronizeUsernameWithSocialPlatform")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("UserMetadata");
                });

            modelBuilder.Entity("VRAtlas.Models.User", b =>
                {
                    b.HasOne("VRAtlas.Models.UserMetadata", "Metadata")
                        .WithMany()
                        .HasForeignKey("MetadataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Metadata");
                });
#pragma warning restore 612, 618
        }
    }
}
